[project]
name = "syftr"
requires-python = ">= 3.12.7,<3.13"
dynamic=["version"]
dependencies = [
    "aiolimiter==1.2.1",
    "asyncio==3.4.3",
    "boto3==1.35.16",
    "botocore==1.35.16",
    "cloudpickle==3.1.1",
    "colorlog==6.9.0",
    "datasets==3.3.2",
    "diskcache==5.6.3",
    "faiss-cpu==1.9.0", # required on the cluster
    "filelock==3.17.0",
    "flock>=0.1",
    "fsspec==2024.12.0",
    "google-cloud-aiplatform>=1.68.0",
    "gitpython==3.1.44",
    "html2text==2024.2.26",
    "huggingface-hub==0.28.1",
    "ipdb==0.13.13",
    "kaleido==0.2.1",
    "kneed==0.8.5",
    "langchain==0.3.18",
    "llama-index==0.12.20",
    "llama-index-agent-introspective==0.3.0",
    "llama-index-agent-lats==0.3.0",
    "llama-index-agent-openai==0.4.5",
    "llama-index-callbacks-arize-phoenix==0.3.0",
    "llama-index-cli==0.4.0",
    "llama-index-core==0.12.20",
    "llama-index-embeddings-azure-openai==0.3.0",
    "llama-index-embeddings-fastembed==0.3.0",
    "llama-index-embeddings-huggingface==0.4.0",
    "llama-index-embeddings-huggingface-optimum==0.3.0",
    "llama-index-embeddings-openai==0.3.1",
    "llama-index-embeddings-openai-like",
    "llama-index-indices-managed-llama-cloud==0.6.8",
    "llama-index-legacy==0.9.48",
    "llama-index-llms-anthropic==0.6.6",
    "llama-index-llms-azure-inference==0.3.0",
    "llama-index-llms-azure-openai==0.3.0",
    "llama-index-llms-cerebras==0.2.2",
    "llama-index-llms-huggingface==0.4.2",
    "llama-index-llms-ollama==0.5.2",
    "llama-index-llms-openai==0.3.20",
    "llama-index-llms-vertex==0.4.3",
    "llama-index-llms-vllm==0.5.0",
    "llama-index-multi-modal-llms-openai==0.4.3",
    "llama-index-program-openai==0.3.1",
    "llama-index-question-gen-openai==0.3.0",
    "llama-index-readers-file==0.4.5",
    "llama-index-readers-llama-parse==0.4.0",
    "llama-index-retrievers-bm25==0.5.2",
    "llama-index-vector-stores-faiss==0.3.0",
    "llama-index-vector-stores-qdrant==0.4.3",
    "lz4==4.4.3",
    "maincontentextractor==0.0.4",
    "numba==0.61.0",
    "numpy==2.1.3",
    "openinference-instrumentation-llama-index==3.3.1",
    "opentelemetry-exporter-otlp==1.30.0",
    "opentelemetry-sdk==1.30.0",
    "optimum[exporters]==1.24.0", # Need this pin (newer may work) for ONNX to work
    "optuna==4.2.1",
    "overrides>=7.7.0",
    "pals==0.4.0",
    "pandas==2.2.3",
    "paretoset==1.2.4",
    "pip==25.0.1",
    "plotly==5.24.1",
    "psycopg2-binary==2.9.10",
    "pydantic-file-secrets==0.4.1",
    "pydantic-settings==2.8.0",
    "python-dotenv==1.0.1",
    "python-slugify==8.0.4",
    "rapidfuzz==3.13.0",
    "ray[default,client,tune,data,serve]==2.39.0",
    "rouge_score==0.1.2",
    "s3fs==2024.12.0",
    "scikit-learn==1.6.1",
    "sentencepiece==0.2.0",
    "tabulate==0.9.0",
    "trace-opt== 0.1.3.6",
    "transformers==4.48.3",
    "tree-sitter-languages==1.10.2",
    "tree-sitter==0.21.3",
    "types-protobuf==5.29.1.20250208",
    "types-pytz==2025.1.0.20250204",
    "types-tabulate==0.9.0.20241207",
    "vertexai==1.68.0",
]

[project.optional-dependencies]
dev = [
    "adjusttext==1.3.0",
    "altair==5.5.0",
    "ansible==11.3.0",
    "beautifulsoup4==4.13.3",
    "dataframe-image==0.2.7",
    "ipykernel==6.29.5",
    "ipython==8.32.0",
    "ipywidgets==8.1.5",
    "isort==6.0.0",
    "jupyter==1.1.1",
    "kneed==0.8.5",
    "matplotlib==3.10.0",
    "mypy==1.15.0",
    "nbformat==5.10.4",
    "nbstripout==0.8.1",
    "numba==0.61.0",
    "optuna-dashboard>=0.18.0",
    "paretoset==1.2.4",
    "pre-commit==4.1.0",
    "pytest-rerunfailures>=15.0",
    "python-slugify==8.0.4",
    "pytz==2025.1",
    "rpdb==0.2.0",
    "ruff==0.9.7",
    "scipy>=1.15.2",
    "seaborn==0.13.2",
    "spacy==3.8.4",
    "statsmodels==0.14.4",
    "types-PyYAML==6.0.12.20241230",
    "types-python-slugify==8.0.2.20240310",
    "types-requests==2.32.0.20241016",
    "types-tabulate==0.9.0.20241207",
    "xgboost==2.1.4",
    "yawsso==1.2.1",
]

[tool.setuptools.package-dir]
syftr = "syftr"
benchmarking = "benchmarking"
scratch = "scratch"

[tool.ruff]
exclude = ["scratch", "notebooks", "plotting.py", "examples"]
line-length = 88
indent-width = 4
lint.select = [
    "E4",   # Enable pycodestyle import checks
    "E7",   # Enable pycodestyle 
    "E9",   # Enable pycodestyle errors checks
    "F",    # Enable pyflakes
    "PLE",  # Enable pylint errors
    "PLW",  # Enable pylint warnings
    "I001", # Enable import sorting
]
lint.ignore = [
    "E712", # Allow equality comparisons to `True`
]

[tool.mypy]
python_version = "3.12"
ignore_missing_imports = true
exclude = ['.venv', 'build', 'notebooks', 'scratch']

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
addopts = "--ignore=scratch"

[[tool.uv.index]]
name = "datarobot-python-dev"
url = "https://artifactory.devinfra.drdev.io/artifactory/api/pypi/python-1711"
publish-url = "https://artifactory.devinfra.drdev.io/artifactory/api/pypi/python-1711"
explicit = true

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
fallback-version = "0.0.0"
